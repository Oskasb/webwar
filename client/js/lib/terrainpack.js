webpackJsonp([19],{0:function(a,b,c){a.exports=c(501)},501:function(a,b,c){if(a.exports={Forrest:c(502),Terrain:c(503),TerrainHandler:c(504),TerrainSurface:c(506),Vegetation:c(505)},"undefined"!=typeof window)for(var d in a.exports)window.goo[d]=a.exports[d]},502:function(a,b,c){function d(){this.calcVec=new f,this.initDone=!1}var e=c(30),f=c(8),g=c(41),h=c(14),i=c(31),j=c(112),k=c(319),l=c(3),m=c(342),n=c(216),o=c(48),p=c(9),q=c(55),r=function(a,b,c){var d=new k({world:a,preloadBinaries:!0,rootPath:"res/trees2"});return b.then(function(){return console.log("loading bundle ",c),d.load("root.bundle")}).then(function(a){for(var b in a)console.log(b);console.error("Config in bundle ",c," contained no scene?!")})};d.prototype.init=function(a,b,c,d,e,f){for(var g=new q.Promise,h=["fish"],i=0;i<h.length;i++)g=r(a,g,h[i]);return g.then(function(){console.log("loaded forrest",e)},function(a){console.log("Error! ",a)}).then(null,function(a){console.log("Error! ",a)}),this.loadLODTrees(a,b,c,d,e,f)},d.prototype.loadLODTrees=function(a,b,c,d,f,g){this.terrainQuery=b,this.forrestTypes=f,this.entityMap=g||{},this.world=a,this.vegetationList={};for(var h in f){var i=f[h],j=this.createBase(i);this.vegetationList[h]=j}var k=new e(t,"vegetation");k.setTexture("DIFFUSE_MAP",c),k.setTexture("NORMAL_MAP",d),k.uniforms.discardThreshold=.6,k.uniforms.materialAmbient=[0,0,0,0],k.uniforms.materialDiffuse=[1,1,1,1],k.uniforms.materialSpecular=[0,0,0,0],k.renderQueue=2001,this.material=k,this.patchSize=32,this.patchDensity=5,this.gridSize=7,this.minDist=1.5,this.patchSpacing=this.patchSize/this.patchDensity,this.gridSizeHalf=Math.floor(.5*this.gridSize),this.grid=[],this.gridState=[];for(var l=this.createForrestPatch(0,0,1),m=0;m<this.gridSize;m++){this.grid[m]=[],this.gridState[m]=[];for(var o=0;o<this.gridSize;o++){var p=a.createEntity(this.material),q=new n(l);q.modelBound.xExtent=this.patchSize,q.modelBound.yExtent=500,q.modelBound.zExtent=this.patchSize,q.modelBoundDirty=!1,p.set(q),p.addToWorld(),this.grid[m][o]=p,this.gridState[m][o]={lod:-1,x:-1,z:-1},p.meshRendererComponent.hidden=!0}}this.currentX=-1e4,this.currentZ=-1e4,this.initDone=!0},d.prototype.rebuild=function(){this.currentX=-1e4,this.currentZ=-1e4};var s=!1;d.prototype.toggle=function(){s=!s;for(var a=0;a<this.gridSize;a++)for(var b=0;b<this.gridSize;b++){var c=this.grid[a][b];c.skip=s}s||this.rebuild()},d.prototype.update=function(a,b){if(this.initDone&&!s){var c=Math.floor(a/this.patchSize),d=Math.floor(b/this.patchSize);if(this.currentX!==c||this.currentZ!==d){for(var a=0;a<this.gridSize;a++)for(var b=0;b<this.gridSize;b++){var e=c+a,f=d+b;e-=this.gridSizeHalf,f-=this.gridSizeHalf;var g=p.moduloPositive(e,this.gridSize),h=p.moduloPositive(f,this.gridSize),i=this.grid[g][h],j=this.gridState[g][h],k=Math.abs(a-this.gridSizeHalf),l=Math.abs(b-this.gridSizeHalf),m=1;if(k<this.minDist&&l<this.minDist&&(m=2),j.lod!==m||j.x!==e||j.z!==f){j.lod=m,j.x=e,j.z=f,e*=this.patchSize,f*=this.patchSize;var n=this.createForrestPatch(e,f,m,i);n&&n.vertexCount>0?(i.meshDataComponent.meshData=n,i.meshRendererComponent.hidden=!1):i.meshRendererComponent.hidden=!0,i.meshRendererComponent.worldBound.center.setDirect(e+.5*this.patchSize,0,f+.5*this.patchSize)}}this.currentX=c,this.currentZ=d}}},d.prototype.determineVegTypeAtPos=function(a){var b=this.terrainQuery.getNormalAt(a);null===b&&(b=f.UNIT_Y);var c=b.dot(f.UNIT_Y);return this.terrainQuery.getForrestType(a[0],a[2],c,p.fastRandom())},d.prototype.fetchTreeMesh=function(a){return l.clone(this.world,this.entityMap[a])},d.prototype.fetchTreeBillboard=function(a,b){var c=this.vegetationList[a],d=this.forrestTypes[a],e=d.w*b,f=d.h*b;return c.getAttributeBuffer("OFFSET").set([.5*-e,0,.5*-e,f,.5*e,f,.5*e,0]),c},d.prototype.getPointInPatch=function(a,b,c,d,e){var f=[0,0,0];return f[0]=c+(a+.75*p.fastRandom())*e,f[2]=.5+d+(b+.75*p.fastRandom())*e,f[1]=this.terrainQuery.getHeightAt(f),null===f[1]&&(f[1]=0),f},d.prototype.addVegMeshToPatch=function(a,b,c,d,e){var f=new g,h=.5*p.fastRandom()+.75;f.translation.set(b),f.update();var i=e&&(2===d||this.forrestTypes[a].forbidden===!0);if(i&&this.entityMap[a]){var j=this.fetchTreeMesh(a);j.transformComponent.transform.scale.scale(h),j.transformComponent.transform.translation.set(b),j.addToWorld(),e.attachChild(j),this.onAddedVegMesh&&this.onAddedVegMesh(a,j,b,h)}else{var k=this.fetchTreeBillboard(a,h);c.addMeshData(k,f)}},d.prototype.createForrestPatch=function(a,b,c,d){var e=new j,f=this.patchDensity,g=this.patchSpacing;d&&d.traverse(function(a,b){b>0&&a.removeFromWorld()}),p.randomSeed=1e4*a+b;for(var h=0;f>h;h++)for(var i=0;f>i;i++){var k=this.getPointInPatch(h,i,a,b,g),l=this.determineVegTypeAtPos(k);l&&this.addVegMeshToPatch(l,k,e,c,d)}var n=e.build();return 2===c&&new m(this.world,1,!0,!0)._combineList(d),n[0]},d.prototype.createBase=function(a){var b=h.defaultMap([h.POSITION,h.TEXCOORD0]);b.BASE=h.createAttribute(1,"Float"),b.OFFSET=h.createAttribute(2,"Float");var c=new h(b,4,6);return c.getAttributeBuffer(h.POSITION).set([0,.1*-a.h,0,0,.1*-a.h,0,0,.1*-a.h,0,0,.1*-a.h,0]),c.getAttributeBuffer(h.TEXCOORD0).set([a.tx,a.ty,a.tx,a.ty+a.th,a.tx+a.tw,a.ty+a.th,a.tx+a.tw,a.ty]),c.getAttributeBuffer("BASE").set([0,a.h,a.h,0]),c.getAttributeBuffer("OFFSET").set([.5*-a.w,0,.5*-a.w,a.h,.5*a.w,a.h,.5*a.w,0]),c.getIndexBuffer().set([0,3,1,1,3,2]),c};var t={processors:[o.light.processor,function(a){o.USE_FOG?(a.setDefine("FOG",!0),a.uniforms.fogSettings=o.FOG_SETTINGS,a.uniforms.fogColor=o.FOG_COLOR):a.removeDefine("FOG")}],attributes:{vertexPosition:h.POSITION,vertexUV0:h.TEXCOORD0,base:"BASE",offset:"OFFSET"},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,cameraPosition:i.CAMERA,diffuseMap:i.DIFFUSE_MAP,normalMap:i.NORMAL_MAP,discardThreshold:-.01,fogSettings:function(){return o.FOG_SETTINGS},fogColor:function(){return o.FOG_COLOR},time:i.TIME},builder:function(a,b){o.light.builder(a,b)},vshader:function(){return["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","attribute float base;","attribute vec2 offset;","uniform mat4 viewProjectionMatrix;","uniform vec3 cameraPosition;","uniform float time;",o.light.prevertex,"varying vec3 normal;","varying vec3 binormal;","varying vec3 tangent;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","void main(void) {","vec3 swayPos = vertexPosition;","vec3 nn = cameraPosition - swayPos.xyz;","nn.y = 0.0;","normal = normalize(nn);","tangent = cross(vec3(0.0, 1.0, 0.0), normal);","binormal = cross(normal, tangent);","swayPos.xz += tangent.xz * offset.x;","swayPos.y += offset.y;","swayPos.x += sin(time * 0.5 + swayPos.x * 0.4) * base * sin(time * 1.5 + swayPos.y * 0.4) * 0.02 + 0.01;","	vec4 worldPos = vec4(swayPos, 1.0);","	vWorldPos = worldPos.xyz;","	gl_Position = viewProjectionMatrix * worldPos;",o.light.vertex,"	texCoord0 = vertexUV0;","	viewPosition = cameraPosition - worldPos.xyz;","}"].join("\n")},fshader:function(){return["uniform sampler2D diffuseMap;","uniform sampler2D normalMap;","uniform float discardThreshold;","uniform vec2 fogSettings;","uniform vec3 fogColor;",o.light.prefragment,"varying vec3 normal;","varying vec3 binormal;","varying vec3 tangent;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","void main(void)","{","	vec4 final_color = texture2D(diffuseMap, texCoord0);","if (final_color.a < discardThreshold) discard;","mat3 tangentToWorld = mat3(tangent, binormal, normal);","vec3 tangentNormal = texture2D(normalMap, texCoord0).xyz * vec3(2.0) - vec3(1.0);","vec3 worldNormal = (tangentToWorld * tangentNormal);","vec3 N = normalize(worldNormal);",o.light.fragment,"#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","	gl_FragColor = final_color;","}"].join("\n")}};a.exports=d},503:function(a,b,c){function d(a,b,c){this.world=a.world,this.renderer=a.renderer,this.size=b,this.count=c,this.splatMult=2,this._gridCache={};var d=new s(2/b,2/b),e=this.drawMaterial1=new h(v);e.blendState.blending="AdditiveBlending",e.cullState.cullFace="Front";var g=this.drawMaterial2=new h(w);g.cullState.cullFace="Front";var i=this.drawMaterial3=new h(x);i.uniforms.size=1/b,i.cullState.cullFace="Front";var j=this.drawMaterial4=new h(y);j.cullState.cullFace="Front",this.renderable={meshData:d,materials:[e],transform:new f},this.renderable.transform.setRotationXYZ(0,0,.5*Math.PI),this.copyPass=new p(k.screenCopy),this.copyPass.material.depthState.enabled=!1,this.upsamplePass=new p(u),this.upsamplePass.material.depthState.enabled=!1,this.normalmapPass=new p(B),this.normalmapPass.material.depthState.enabled=!1,this.normalmapPass.material.uniforms.resolution=[b,b],this.normalmapPass.material.uniforms.height=10,this.extractFloatPass=new p(z),this.normalMap=new m(b,b),this.textures=[],this.texturesBounce=[];for(var l=0;c>l;l++)this.textures[l]=new m(b,b,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,type:"Float"}),this.texturesBounce[l]=new m(b,b,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,type:"Float"}),b*=.5;i.setTexture("HEIGHT_MAP",this.texturesBounce[0]),j.setTexture("HEIGHT_MAP",this.texturesBounce[0]),this.n=31,this.gridSize=4*(this.n+1)-1,console.log("grid size: ",this.gridSize),this.splat=new m(this.size*this.splatMult,this.size*this.splatMult,{wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1}),this.splatCopy=new m(this.size*this.splatMult,this.size*this.splatMult,{wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1}),g.setTexture("SPLAT_MAP",this.splatCopy)}var e=c(9),f=c(41),g=c(14),h=c(30),i=c(31),j=c(48),k=c(46),l=c(47),m=c(133),n=c(53),o=c(123),p=c(135),q=c(136),r=c(51),s=c(28);d.prototype.init=function(a){var b=this.world,c=this.count,d=this.terrainRoot=b.createEntity("TerrainRoot");d.addToWorld(),this.clipmaps=[];for(var e=0;c>e;e++){var f=Math.pow(2,e),g=new h(t,"clipmap"+e);g.uniforms.materialAmbient=[0,0,0,1],g.uniforms.materialDiffuse=[1,1,1,1],g.cullState.frontFace="CW",g.uniforms.resolution=[1,1/f,this.size,this.size],g.uniforms.resolutionNorm=[this.size,this.size];var i=this.createClipmapLevel(b,g,e);i.setScale(f,1,f),d.attachChild(i);var j=new h(A,"terrainPickingMaterial"+e);j.cullState.frontFace="CW",j.uniforms.resolution=[1,1/f,this.size,this.size],j.blendState={blending:"NoBlending",blendEquation:"AddEquation",blendSrc:"SrcAlphaFactor",blendDst:"OneMinusSrcAlphaFactor"},this.clipmaps[e]={clipmapEntity:i,level:e,size:f,currentX:1e5,currentY:1e5,currentZ:1e5,origMaterial:g,terrainPickingMaterial:j}}for(var k=this.clipmaps[this.clipmaps.length-1],e=this.clipmaps.length-2;e>=0;e--){var l=this.clipmaps[e];l.parentClipmap=k,k=l}var m=new r;m.shadowSettings.size=10;var o=this.lightEntity=b.createEntity(m);o.setTranslation(200,200,200),o.setRotation(.5*-Math.PI,0,0),o.addToWorld(),this.lightEntity.lightComponent.hidden=!0,this.floatTexture=a.heightMap instanceof n?a.heightMap:new n(a.heightMap,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,format:"Luminance"},this.size,this.size),this.splatTexture=a.splatMap instanceof n?a.splatMap:new n(a.splatMap,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,flipY:!1},this.size*this.splatMult,this.size*this.splatMult);for(var e=0;e<this.count;e++){var g=this.clipmaps[e].origMaterial,p=this.textures[e];g.setTexture("HEIGHT_MAP",p),g.setTexture("NORMAL_MAP",this.normalMap),g.setTexture("DETAIL_MAP",this.detailMap),g.setTexture("SPLAT_MAP",this.splat),g.setTexture("GROUND_MAP1",a.ground1),g.setTexture("GROUND_MAP2",a.ground2),g.setTexture("GROUND_MAP3",a.ground3),g.setTexture("GROUND_MAP4",a.ground4),g.setTexture("GROUND_MAP5",a.ground5),g.setTexture("STONE_MAP",a.stone);var j=this.clipmaps[e].terrainPickingMaterial;j.setTexture("HEIGHT_MAP",p)}this.copyPass.render(this.renderer,this.textures[0],this.floatTexture),this.copyPass.render(this.renderer,this.splatCopy,this.splatTexture),this.copyPass.render(this.renderer,this.splat,this.splatTexture),this.updateTextures()},d.prototype.toggleMarker=function(){this.lightEntity.lightComponent.hidden=!this.lightEntity.lightComponent.hidden},d.prototype.setMarker=function(a,b,c,d,e,f){this.lightEntity.lightComponent.light.shadowSettings.size=.5*b,f.wrapS="EdgeClamp",f.wrapT="EdgeClamp",this.lightEntity.lightComponent.light.lightCookie=f,this.lightEntity.setTranslation(c,200,d)},d.prototype.pick=function(a,b,c,d){var e=[];this.terrainRoot.traverse(function(a){a.meshDataComponent&&a.meshRendererComponent.hidden===!1&&e.push(a)});for(var f=0;f<this.clipmaps.length;f++){var g=this.clipmaps[f];g.clipmapEntity.traverse(function(a){a.meshRendererComponent&&(a.meshRendererComponent.isPickable=!0,a.meshRendererComponent.materials[0]=g.terrainPickingMaterial)})}this.renderer.renderToPick(e,o.mainCamera,!0,!1,!1,b,c,null,!0);var h={};this.renderer.pick(b,c,h,o.mainCamera),a.getWorldPosition(b,c,this.renderer.viewportWidth,this.renderer.viewportHeight,h.depth,d);for(var f=0;f<this.clipmaps.length;f++){var g=this.clipmaps[f];g.clipmapEntity.traverse(function(a){a.meshRendererComponent&&(a.meshRendererComponent.isPickable=!1,a.meshRendererComponent.materials[0]=g.origMaterial)})}},d.prototype.draw=function(a,b,c,d,f,g,h,j,k){h=e.clamp(h,0,1),d=2*(d-this.size/2),g=2*(g-this.size/2),"paint"===a?(this.renderable.materials[0]=this.drawMaterial2,this.renderable.materials[0].uniforms.opacity=h,"add"===b?(this.renderable.materials[0].blendState.blendEquationColor="AddEquation",this.renderable.materials[0].blendState.blendEquationAlpha="AddEquation"):"sub"===b&&(this.renderable.materials[0].blendState.blendEquationColor="ReverseSubtractEquation",this.renderable.materials[0].blendState.blendEquationAlpha="ReverseSubtractEquation"),j?this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,j):this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setDirect(d/this.size,g/this.size,0),this.renderable.transform.scale.setDirect(-c,c,c),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.splatCopy,this.splat),this.renderable.materials[0].uniforms.rgba=k||[1,1,1,1],this.renderer.render(this.renderable,q.camera,[],this.splat,!1)):"smooth"===a?(this.renderable.materials[0]=this.drawMaterial3,this.renderable.materials[0].uniforms.opacity=h,j?this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,j):this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setDirect(d/this.size,g/this.size,0),this.renderable.transform.scale.setDirect(-c,c,c),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.render(this.renderable,q.camera,[],this.textures[0],!1)):"flatten"===a?(this.renderable.materials[0]=this.drawMaterial4,this.renderable.materials[0].uniforms.opacity=h,this.renderable.materials[0].uniforms.height=f,j?this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,j):this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setDirect(d/this.size,g/this.size,0),this.renderable.transform.scale.setDirect(-c,c,c),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.render(this.renderable,q.camera,[],this.textures[0],!1)):(this.renderable.materials[0]=this.drawMaterial1,this.renderable.materials[0].uniforms.opacity=h,"add"===b?this.renderable.materials[0].blendState.blending="AdditiveBlending":"sub"===b?this.renderable.materials[0].blendState.blending="SubtractiveBlending":"mul"===b&&(this.renderable.materials[0].blendState.blending="MultiplyBlending"),j?this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,j):this.renderable.materials[0].setTexture(i.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setDirect(d/this.size,g/this.size,0),this.renderable.transform.scale.setDirect(-c,c,c),this.renderable.transform.update(),this.renderer.render(this.renderable,q.camera,[],this.textures[0],!1))},d.prototype.getTerrainData=function(){var a=new Uint8Array(this.size*this.size*4);this.extractFloatPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.readPixels(0,0,this.size,this.size,a);var b=new Float32Array(a.buffer),c=new Uint8Array(this.size*this.size*4);this.normalmapPass.render(this.renderer,this.normalMap,this.textures[0]),this.renderer.readPixels(0,0,this.size,this.size,c);var d=new Uint8Array(this.size*this.size*4*4);return this.copyPass.render(this.renderer,this.splatCopy,this.splat),this.renderer.readPixels(0,0,this.size*this.splatMult,this.size*this.splatMult,d),{heights:b,normals:c,splat:d}},d.prototype.updateAmmoBody=function(){for(var a=this.getTerrainData().heights,b=this.heightBuffer,c=0;c<this.size;c++)for(var d=0;d<this.size;d++)Ammo.setValue(b+4*(c*this.size+d),a[(this.size-c-1)*this.size+d],"float")},d.prototype.setLightmapTexture=function(a){for(var b=0;b<this.clipmaps.length;b++){var c=this.clipmaps[b];c.clipmapEntity.traverse(function(b){if(b.meshRendererComponent){var c=b.meshRendererComponent.materials[0];a?(c.setTexture("LIGHT_MAP",a),c.shader.setDefine("LIGHTMAP",!0)):c.shader.removeDefine("LIGHTMAP")}})}},d.prototype.initAmmoBody=function(){var a=this.heightBuffer=Ammo.allocate(4*this.size*this.size,"float",Ammo.ALLOC_NORMAL);this.updateAmmoBody();var b=1,c=-500,d=500,e=1,f=0,g=!1,h=new Ammo.btHeightfieldTerrainShape(this.size,this.size,a,b,c,d,e,f,g),i=new Ammo.btTransform;i.setIdentity(),i.setOrigin(new Ammo.btVector3(this.size/2,0,this.size/2));var j=new Ammo.btDefaultMotionState(i),k=new Ammo.btVector3(0,0,0),l=0,m=new Ammo.btRigidBodyConstructionInfo(l,j,h,k),n=new Ammo.btRigidBody(m);return n.setFriction(1),this.world.getSystem("AmmoSystem").ammoWorld.addRigidBody(n),n},d.prototype.updateTextures=function(){for(var a=0;a<this.count-1;a++){var b=this.textures[a],c=this.textures[a+1];b.magFilter="Bilinear",b.minFilter="BilinearNoMipMaps",this.copyPass.render(this.renderer,c,b)}for(var d=this.size,a=0;a<this.count;a++){var e=this.texturesBounce[a],b=this.textures[a],c=this.textures[a+1];this.upsamplePass.material.setTexture("MAIN_MAP",b),this.upsamplePass.material.uniforms.res=[d,d,2/d,2/d],c?(c.magFilter="NearestNeighbor",c.minFilter="NearestNeighborNoMipMaps",this.upsamplePass.render(this.renderer,e,c)):(b.magFilter="NearestNeighbor",b.minFilter="NearestNeighborNoMipMaps",this.upsamplePass.render(this.renderer,e,b)),d*=.5}for(var a=0;a<this.count;a++)this.copyPass.render(this.renderer,this.textures[a],this.texturesBounce[a]);this.normalmapPass.render(this.renderer,this.normalMap,this.textures[0])},d.prototype.update=function(a){for(var b=a.x,c=a.y,d=a.z,f=0;f<this.clipmaps.length;f++){var g=this.clipmaps[f],h=Math.floor(.5*b/g.size),i=Math.floor(.5*c/g.size),j=Math.floor(.5*d/g.size);if(i!==g.currentY){g.currentY=i;var k=this.gridSize*g.size*2;if(g.clipmapEntity._hidden===!1&&c>k){if(g.clipmapEntity.hide(),f<this.clipmaps.length-1){var l=this.clipmaps[f+1];l.clipmapEntity.innermost.meshRendererComponent.hidden=!1,l.clipmapEntity.interior1.meshRendererComponent.hidden=!0,l.clipmapEntity.interior2.meshRendererComponent.hidden=!0}continue}if(g.clipmapEntity._hidden===!0&&k>=c&&(g.clipmapEntity.show(),f<this.clipmaps.length-1)){var l=this.clipmaps[f+1];l.clipmapEntity.innermost.meshRendererComponent.hidden=!0,l.clipmapEntity.interior1.meshRendererComponent.hidden=!1,l.clipmapEntity.interior2.meshRendererComponent.hidden=!1}}if(h!==g.currentX||j!==g.currentZ){var m=this.n;if(g.parentClipmap){var n=g.parentClipmap.clipmapEntity.interior1,o=g.parentClipmap.clipmapEntity.interior2,p=e.moduloPositive(h+1,2),q=e.moduloPositive(j+1,2),r=p%2===0?-m:m+1,s=q%2===0?-m:m+1;n.setTranslation(-m,0,s),q=e.moduloPositive(j,2),s=q%2===0?-m:-m+1,o.setTranslation(r,0,s)}g.clipmapEntity.setTranslation(h*g.size*2,0,j*g.size*2),g.currentX=h,g.currentZ=j}}},d.prototype.createClipmapLevel=function(a,b,c){var d=a.createEntity("clipmap"+c);d.addToWorld();var e=this.n;return this.createQuadEntity(a,b,c,d,-2*e,-2*e,e,e),this.createQuadEntity(a,b,c,d,-1*e,-2*e,e,e),this.createQuadEntity(a,b,c,d,0*e,-2*e,2,e),this.createQuadEntity(a,b,c,d,2,-2*e,e,e),this.createQuadEntity(a,b,c,d,2+1*e,-2*e,e,e),this.createQuadEntity(a,b,c,d,-2*e,-1*e,e,e),this.createQuadEntity(a,b,c,d,2+1*e,-1*e,e,e),this.createQuadEntity(a,b,c,d,-2*e,0,e,2),this.createQuadEntity(a,b,c,d,2+1*e,0,e,2),this.createQuadEntity(a,b,c,d,-2*e,2,e,e),this.createQuadEntity(a,b,c,d,2+1*e,2,e,e),this.createQuadEntity(a,b,c,d,-2*e,2+1*e,e,e),this.createQuadEntity(a,b,c,d,-1*e,2+1*e,e,e),this.createQuadEntity(a,b,c,d,0,2+1*e,2,e),this.createQuadEntity(a,b,c,d,2,2+1*e,e,e),this.createQuadEntity(a,b,c,d,2+1*e,2+1*e,e,e),d.innermost=this.createQuadEntity(a,b,c,d,-e,-e,2*e+2,2*e+2),0!==c&&(d.innermost.meshRendererComponent.hidden=!0,d.interior1=this.createQuadEntity(a,b,c,d,-e,-e,2*e+2,1),d.interior2=this.createQuadEntity(a,b,c,d,-e,-e,1,2*e+1)),d},d.prototype.createQuadEntity=function(a,b,c,d,e,f,g,h){var i=this.createGrid(g,h),j=a.createEntity("mesh_"+g+"_"+h,i,b);return j.meshDataComponent.modelBound.xExtent=.5*g,j.meshDataComponent.modelBound.yExtent=255,j.meshDataComponent.modelBound.zExtent=.5*h,j.meshDataComponent.modelBound.center.setDirect(.5*g,128,.5*h),j.meshDataComponent.modelBoundDirty=!1,j.meshRendererComponent.isPickable=!1,j.setTranslation(e,0,f),d.attachChild(j),j.addToWorld(),j},d.prototype.createGrid=function(a,b){var c=a+"_"+b;if(this._gridCache[c])return this._gridCache[c];var d=g.defaultMap([g.POSITION]),e=new g(d,(a+1)*(b+1),(2*a+4)*b);this._gridCache[c]=e,e.indexModes=["TriangleStrip"];for(var f=e.getAttributeBuffer(g.POSITION),h=e.getIndexBuffer(),i=0;a+1>i;i++)for(var j=0;b+1>j;j++){var k=j*(a+1)+i;f[3*k+0]=i,f[3*k+1]=0,f[3*k+2]=j}for(var l=0,k=0,j=0;b>j;j++){h[l++]=j*(a+1),h[l++]=j*(a+1);for(var i=0;a>i;i++)k=j*(a+1)+i,h[l++]=k+a+1,h[l++]=k+1;h[l++]=k+a+1+1,h[l++]=k+a+1+1}return console.log((a+1)*(b+1),(2*a+4)*b,a*b*6),e};var t={defines:{SKIP_SPECULAR:!0},processors:[j.light.processor,function(a){j.USE_FOG?(a.setDefine("FOG",!0),a.uniforms.fogSettings=j.FOG_SETTINGS,a.uniforms.fogColor=j.FOG_COLOR):a.removeDefine("FOG")}],attributes:{vertexPosition:g.POSITION},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,cameraPosition:i.CAMERA,heightMap:"HEIGHT_MAP",normalMap:"NORMAL_MAP",detailMap:"DETAIL_MAP",splatMap:"SPLAT_MAP",groundMap1:"GROUND_MAP1",groundMap2:"GROUND_MAP2",groundMap3:"GROUND_MAP3",groundMap4:"GROUND_MAP4",groundMap5:"GROUND_MAP5",stoneMap:"STONE_MAP",lightMap:"LIGHT_MAP",fogSettings:function(){return j.FOG_SETTINGS},fogColor:function(){return j.FOG_COLOR},resolution:[255,1,1024,1024],resolutionNorm:[1024,1024],col:[0,0,0]},builder:function(a,b){j.light.builder(a,b)},vshader:function(){return["attribute vec3 vertexPosition;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform vec3 cameraPosition;","uniform sampler2D heightMap;","uniform vec4 resolution;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec4 alphaval;",j.light.prevertex,"const vec2 alphaOffset = vec2(45.0);","const vec2 oneOverWidth = vec2(1.0 / 16.0);","void main(void) {","vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","vec2 coord = (worldPos.xz + vec2(0.5, 0.5)) / resolution.zw;","vec4 heightCol = texture2D(heightMap, coord);","float zf = heightCol.r;","float zd = heightCol.g;","vec2 alpha = clamp((abs(worldPos.xz - cameraPosition.xz) * resolution.y - alphaOffset) * oneOverWidth, vec2(0.0), vec2(1.0));","alpha.x = max(alpha.x, alpha.y);","float z = mix(zf, zd, alpha.x);","z = coord.x <= 0.0 || coord.x >= 1.0 || coord.y <= 0.0 || coord.y >= 1.0 ? -2000.0 : z;","alphaval = vec4(zf, zd, alpha.x, z);","worldPos.y = z * resolution.x;","gl_Position = viewProjectionMatrix * worldPos;","vWorldPos = worldPos.xyz;","viewPosition = cameraPosition - vWorldPos;",j.light.vertex,"}"].join("\n")},fshader:function(){return["uniform vec3 col;","uniform sampler2D normalMap;","uniform sampler2D splatMap;","uniform sampler2D detailMap;","uniform sampler2D groundMap1;","uniform sampler2D groundMap2;","uniform sampler2D groundMap3;","uniform sampler2D groundMap4;","uniform sampler2D groundMap5;","uniform sampler2D stoneMap;","uniform sampler2D lightMap;","uniform vec2 fogSettings;","uniform vec3 fogColor;","uniform vec2 resolutionNorm;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec4 alphaval;",j.light.prefragment,"void main(void) {","if (alphaval.w < -1000.0) discard;","vec2 mapcoord = vWorldPos.xz / resolutionNorm;","vec2 coord = mapcoord * 96.0;","vec4 final_color = vec4(1.0);","vec3 N = (texture2D(normalMap, mapcoord).xyz * vec3(2.0) - vec3(1.0)).xzy;","N.y = 0.1;","N = normalize(N);","vec4 splat = texture2D(splatMap, mapcoord);","vec4 g1 = texture2D(groundMap1, coord);","vec4 g2 = texture2D(groundMap2, coord);","vec4 g3 = texture2D(groundMap3, coord);","vec4 g4 = texture2D(groundMap4, coord);","vec4 g5 = texture2D(groundMap5, coord);","vec4 stone = texture2D(stoneMap, coord);","final_color = mix(g1, g2, splat.r);","final_color = mix(final_color, g3, splat.g);","final_color = mix(final_color, g4, splat.b);","final_color = mix(final_color, g5, splat.a);","float slope = clamp(1.0 - dot(N, vec3(0.0, 1.0, 0.0)), 0.0, 1.0);","slope = smoothstep(0.15, 0.25, slope);","final_color = mix(final_color, stone, slope);","#ifdef LIGHTMAP","final_color = final_color * texture2D(lightMap, mapcoord);","#else",j.light.fragment,"#endif","#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","gl_FragColor = final_color;","}"].join("\n")}},u={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{diffuseMap:"MAIN_MAP",childMap:i.DIFFUSE_MAP,res:[1,1,1,1]},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D childMap;","uniform vec4 res;","varying vec2 texCoord0;","void main(void)","{","	gl_FragColor = texture2D(diffuseMap, texCoord0);","	vec2 coordMod = mod(floor(texCoord0 * res.xy), 2.0);","	bvec2 test = equal(coordMod, vec2(0.0));","	if (all(test)) {","		gl_FragColor.g = texture2D(childMap, texCoord0).r;","	} else if (test.x) {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(0.0, res.w)).r) * 0.5;","	} else if (test.y) {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(res.z, 0.0)).r) * 0.5;","	} else {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(res.z, res.w)).r) * 0.5;","	}","	gl_FragColor.ba = vec2(0.0);","}"].join("\n")},v={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,opacity:1,diffuseMap:i.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform float opacity;","varying vec2 texCoord0;","void main(void)","{","	gl_FragColor = texture2D(diffuseMap, texCoord0);","	gl_FragColor.a *= opacity;","}"].join("\n")},w={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,opacity:1,rgba:[1,1,1,1],diffuseMap:i.DIFFUSE_MAP,splatMap:"SPLAT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D splatMap;","uniform vec4 rgba;","uniform float opacity;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	vec4 splat = texture2D(splatMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	vec4 final = mix(splat, rgba, opacity * length(brush.rgb) * brush.a);","	gl_FragColor = final;","}"].join("\n")},x={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,opacity:1,size:1/512,diffuseMap:i.DIFFUSE_MAP,heightMap:"HEIGHT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D heightMap;","uniform float opacity;","uniform float size;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	float col1 = texture2D(heightMap, texCoord1 + vec2(-size, -size)).r;","	float col2 = texture2D(heightMap, texCoord1 + vec2(-size, size)).r;","	float col3 = texture2D(heightMap, texCoord1 + vec2(size, size)).r;","	float col4 = texture2D(heightMap, texCoord1 + vec2(size, -size)).r;","	float avg = (col1 + col2 + col3 + col4) * 0.25;","	gl_FragColor = texture2D(heightMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	gl_FragColor.r = mix(gl_FragColor.r, avg, brush.r * brush.a * opacity);","}"].join("\n")},y={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,opacity:1,height:0,diffuseMap:i.DIFFUSE_MAP,heightMap:"HEIGHT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D heightMap;","uniform float opacity;","uniform float height;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	gl_FragColor = texture2D(heightMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	gl_FragColor.r = mix(gl_FragColor.r, height, brush.r * brush.a * opacity);","}"].join("\n")},z={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewProjectionMatrix:i.VIEW_PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,diffuseMap:i.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","varying vec2 texCoord0;","float shift_right (float v, float amt) {","v = floor(v) + 0.5;","return floor(v / exp2(amt));","}","float shift_left (float v, float amt) {","return floor(v * exp2(amt) + 0.5);","}","float mask_last (float v, float bits) {","return mod(v, shift_left(1.0, bits));","}","float extract_bits (float num, float from, float to) {","from = floor(from + 0.5); to = floor(to + 0.5);","return mask_last(shift_right(num, from), to - from);","}","vec4 encode_float (float val) {","if (val == 0.0) return vec4(0, 0, 0, 0);","float sign = val > 0.0 ? 0.0 : 1.0;","val = abs(val);","float exponent = floor(log2(val));","float biased_exponent = exponent + 127.0;","float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;","float t = biased_exponent / 2.0;","float last_bit_of_biased_exponent = fract(t) * 2.0;","float remaining_bits_of_biased_exponent = floor(t);","float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;","float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;","float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;","float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;","return vec4(byte4, byte3, byte2, byte1);","}","void main(void)","{","	gl_FragColor = encode_float(texture2D(diffuseMap, vec2(texCoord0.x, 1.0 - texCoord0.y)).r);","}"].join("\n")
},A={attributes:{vertexPosition:g.POSITION},uniforms:{viewMatrix:i.VIEW_MATRIX,projectionMatrix:i.PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,cameraFar:i.FAR_PLANE,cameraPosition:i.CAMERA,heightMap:"HEIGHT_MAP",resolution:[255,1,1,1],id:function(a){return a.renderable.id+1}},vshader:["attribute vec3 vertexPosition;","uniform sampler2D heightMap;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","uniform float cameraFar;","uniform vec4 resolution;","uniform vec3 cameraPosition;","varying float depth;","const vec2 alphaOffset = vec2(45.0);","const vec2 oneOverWidth = vec2(1.0 / 16.0);","void main(void) {","vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","vec2 coord = (worldPos.xz + vec2(0.5, 0.5)) / resolution.zw;","vec4 heightCol = texture2D(heightMap, coord);","float zf = heightCol.r;","float zd = heightCol.g;","vec2 alpha = clamp((abs(worldPos.xz - cameraPosition.xz) * resolution.y - alphaOffset) * oneOverWidth, vec2(0.0), vec2(1.0));","alpha.x = max(alpha.x, alpha.y);","float z = mix(zf, zd, alpha.x);","worldPos.y = z * resolution.x;","vec4 mvPosition = viewMatrix * worldPos;","depth = -mvPosition.z / cameraFar;","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fshader:["uniform float id;","varying float depth;",l.methods.packDepth16,"void main() {","vec2 packedId = vec2(floor(id/255.0), mod(id, 255.0)) * vec2(1.0/255.0);","vec2 packedDepth = packDepth16(depth);","gl_FragColor = vec4(packedId, packedDepth);","}"].join("\n")},B={attributes:{vertexPosition:g.POSITION,vertexUV0:g.TEXCOORD0},uniforms:{viewMatrix:i.VIEW_MATRIX,projectionMatrix:i.PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX,heightMap:i.DIFFUSE_MAP,resolution:[512,512],height:.05},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float height;","uniform vec2 resolution;","uniform sampler2D heightMap;","varying vec2 vUv;","void main() {","float val = texture2D(heightMap, vUv).x;","float valU = texture2D(heightMap, vUv + vec2(1.0 / resolution.x, 0.0)).x;","float valV = texture2D(heightMap, vUv + vec2(0.0, 1.0 / resolution.y)).x;","vec3 normal = vec3(val - valU, val - valV, height);","gl_FragColor = vec4((0.5 * normalize(normal) + 0.5), 1.0);","}"].join("\n")};a.exports=d},504:function(a,b,c){function d(a,b,c,d){this.goo=a,this.terrainSize=b,this.resourceFolder=d,this.terrain=new e(a,this.terrainSize,c),this.vegetation=new f,this.forrest=new g,this.hidden=!1,this.store=new h,this.settings=null,this.pick=!0,this.draw=!1,this.eventX=0,this.eventY=0,this.vegetationSettings={gridSize:7}}var e=c(503),f=c(505),g=c(502),h=c(8),i=c(132),j=c(9),k=c(53),l=c(125),m=c(55);d.prototype.isEditing=function(){return!this.hidden},d.prototype.getHeightAt=function(a){return this.terrainQuery?this.terrainQuery.getHeightAt(a):0},d.prototype.isEditing=function(){return!this.hidden},d.prototype.getHeightAt=function(a){return this.terrainQuery?this.terrainQuery.getHeightAt(a):0};var n=!1,o=!1,p=function(a){0===a.button&&(this.eventX=a.clientX,this.eventY=a.clientY,n=!0,o=a.altKey,this.pick=!0,this.draw=!0,console.log("mousedown"))},q=function(a){0===a.button&&(n=!1,this.draw=!1,console.log("mouseup"))},r=function(a){this.eventX=a.clientX,this.eventY=a.clientY,this.pick=!0,n&&(o=a.altKey,this.draw=!0)};d.prototype.toggleEditMode=function(){this.terrain.toggleMarker(),this.hidden=!this.hidden,this.hidden?(this.goo.renderer.domElement.addEventListener("mousedown",p.bind(this),!1),this.goo.renderer.domElement.addEventListener("mouseup",q.bind(this),!1),this.goo.renderer.domElement.addEventListener("mouseout",q.bind(this),!1),this.goo.renderer.domElement.addEventListener("mousemove",r.bind(this),!1)):(this.goo.renderer.domElement.removeEventListener("mousedown",p),this.goo.renderer.domElement.removeEventListener("mouseup",q),this.goo.renderer.domElement.removeEventListener("mouseout",q),this.goo.renderer.domElement.removeEventListener("mousemove",r),this.terrainInfo=this.terrain.getTerrainData(),this.draw=!1,n=!1),this.forrest.toggle(),this.vegetation.toggle()},d.prototype.initLevel=function(a,b,c){this.settings=b;var d=this.terrainSize,e=this._loadData(a.heightMap),f=this._loadData(a.splatMap);return m.all([e,f]).then(function(b){var e,f=b[0],g=b[1];e=f?new Float32Array(f):new Float32Array(d*d);var h;return h=g?new Uint8Array(g):new Uint8Array(d*d*4*4),this._load(a,e,h,c)}.bind(this))},d.prototype._loadData=function(a){var b=new m.Promise,c=new i;return c.get({url:this.resourceFolder+a,responseType:"arraybuffer"}).then(function(a){b.resolve(a.response)}.bind(this),function(){b.resolve(null)}.bind(this)),b},d.prototype._textureLoad=function(a){return(new l).loadTexture2D(a,{anisotropy:4})},d.prototype._load=function(a,b,c,d){var e=[];return e.push(this._textureLoad(this.resourceFolder+a.ground1.texture)),e.push(this._textureLoad(this.resourceFolder+a.ground2.texture)),e.push(this._textureLoad(this.resourceFolder+a.ground3.texture)),e.push(this._textureLoad(this.resourceFolder+a.ground4.texture)),e.push(this._textureLoad(this.resourceFolder+a.ground5.texture)),e.push(this._textureLoad(this.resourceFolder+a.stone.texture)),m.all(e).then(function(e){this.terrain.init({heightMap:b,splatMap:c,ground1:e[0],ground2:e[1],ground3:e[2],ground4:e[3],ground5:e[4],stone:e[5]}),this.terrainInfo=this.terrain.getTerrainData();var f=this.terrainSize,g=new h,i=this.terrainQuery={getHeightAt:function(a){if(a[0]<0||a[0]>f-1||a[2]<0||a[2]>f-1)return-1e3;var b=a[0],c=f-a[2],d=Math.floor(b),e=Math.floor(c),g=b-d,h=c-e,i=d+1,k=e+1;d=j.moduloPositive(d,f),e=j.moduloPositive(e,f),i=j.moduloPositive(i,f),k=j.moduloPositive(k,f);var l=this.terrainInfo.heights[e*f+d],m=this.terrainInfo.heights[e*f+i],n=this.terrainInfo.heights[k*f+d],o=this.terrainInfo.heights[k*f+i];return j.lerp(h,j.lerp(g,l,m),j.lerp(g,n,o))}.bind(this),getNormalAt:function(a){var b=a[0],c=f-a[2],d=Math.floor(b),e=Math.floor(c),h=d+1,i=e+1;d=j.moduloPositive(d,f),e=j.moduloPositive(e,f),h=j.moduloPositive(h,f),i=j.moduloPositive(i,f);var k=this.terrainInfo.heights[e*f+d],l=this.terrainInfo.heights[e*f+h],m=this.terrainInfo.heights[i*f+d];return g.setDirect(k-l,1,m-k).normalize()}.bind(this),getVegetationType:function(b,c,d){var e=Math.random();if(j.smoothstep(.82,.91,d)<e)return null;if(this.terrainInfo){if(b=Math.floor(b),c=Math.floor(c),0>b||b>f-1||0>c||c>f-1)return null;b*=this.terrain.splatMult,c*=this.terrain.splatMult;var g=4*(c*f*this.terrain.splatMult+b),h=this.terrainInfo.splat[g+0]/255,i=this.terrainInfo.splat[g+1]/255,k=this.terrainInfo.splat[g+2]/255,l=this.terrainInfo.splat[g+3]/255,m=h>e?a.ground2:i>e?a.ground3:k>e?a.ground4:l>e?a.ground5:a.ground1,n=0;for(var o in m.vegetation)if(n+=m.vegetation[o],n>e)return o;return null}return null}.bind(this),getForrestType:function(b,c,d,e){if(j.smoothstep(.8,.88,d)<e)return null;if(this.terrainInfo){if(b=Math.floor(b),c=Math.floor(c),0>b||b>f-1||0>c||c>f-1)return null;b*=this.terrain.splatMult,c*=this.terrain.splatMult;var g=4*(c*f*this.terrain.splatMult+b),h=this.terrainInfo.splat[g+0]/255,i=this.terrainInfo.splat[g+1]/255,k=this.terrainInfo.splat[g+2]/255,l=this.terrainInfo.splat[g+3]/255,m=h>e?a.ground2:i>e?a.ground3:k>e?a.ground4:l>e?a.ground5:a.ground1,n=0;for(var o in m.forrest)if(n+=m.forrest[o],n>e)return o;return null}return null}.bind(this),getLightAt:function(a){if(a[0]<0||a[0]>f-1||a[2]<0||a[2]>f-1)return-1e3;if(!this.lightMapData||!this.lightMapSize)return 1;var b=a[0]*this.lightMapSize/f,c=(f-a[2])*this.lightMapSize/f,d=Math.floor(b),e=Math.floor(c),g=b-d,h=c-e,i=d+1,k=e+1;d=j.moduloPositive(d,this.lightMapSize),e=j.moduloPositive(e,this.lightMapSize),i=j.moduloPositive(i,this.lightMapSize),k=j.moduloPositive(k,this.lightMapSize);var l=this.lightMapData[e*this.lightMapSize+d],m=this.lightMapData[e*this.lightMapSize+i],n=this.lightMapData[k*this.lightMapSize+d],o=this.lightMapData[k*this.lightMapSize+i];return j.lerp(h,j.lerp(g,l,m),j.lerp(g,n,o))/255}.bind(this),getType:function(b,c,d,e){if(j.smoothstep(.8,.88,d)<e)return a.stone;if(this.terrainInfo){if(b=Math.floor(b),c=Math.floor(c),0>b||b>f-1||0>c||c>f-1)return a.stone;b*=this.terrain.splatMult,c*=this.terrain.splatMult;var g=4*(c*f*this.terrain.splatMult+b),h=this.terrainInfo.splat[g+0]/255,i=this.terrainInfo.splat[g+1]/255,k=this.terrainInfo.splat[g+2]/255,l=this.terrainInfo.splat[g+3]/255,m=h>e?a.ground2:i>e?a.ground3:k>e?a.ground4:l>e?a.ground5:a.ground1;return m}return a.stone}.bind(this)};return(new l).loadTexture2D(this.resourceFolder+a.vegetationAtlas).then(function(b){b.anisotropy=4;var c=a.vegetationTypes;return(new l).loadTexture2D(this.resourceFolder+a.forrestAtlas).then(function(e){return e.anisotropy=4,(new l).loadTexture2D(this.resourceFolder+a.forrestAtlasNormals).then(function(f){var g=a.forrestTypes;this.vegetation.init(this.goo.world,i,b,c,this.vegetationSettings),this.forrest.init(this.goo.world,i,e,f,g,d)}.bind(this))}.bind(this))}.bind(this))}.bind(this))},d.prototype.updatePhysics=function(){this.terrain.updateAmmoBody()},d.prototype.initPhysics=function(){this.ammoBody=this.terrain.initAmmoBody()},d.prototype.useLightmap=function(a,b){if(a){var c=new k(a,{magFilter:"Bilinear",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,format:"Luminance",type:"UnsignedByte"},b,b);this.lightMapData=a,this.lightMapSize=b,this.terrain.setLightmapTexture(c)}else delete this.lightMapData,delete this.lightMapSize,this.terrain.setLightmapTexture()},d.prototype.useLightmap=function(a,b){if(a){var c=new k(a,{magFilter:"Bilinear",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,format:"Luminance",type:"UnsignedByte"},b,b);this.lightMapData=a,this.lightMapSize=b,this.terrain.setLightmapTexture(c)}else delete this.lightMapData,delete this.lightMapSize,this.terrain.setLightmapTexture()},d.prototype.update=function(a){var b=a.cameraComponent.camera.translation;if(this.terrain){var c=this.settings;if(this.hidden&&this.pick&&(this.terrain.pick(a.cameraComponent.camera,this.eventX,this.eventY,this.store),this.terrain.setMarker("add",c.size,this.store.x,this.store.z,c.power,c.brushTexture),this.pick=!1),this.hidden&&this.draw){var d="add";o&&(d="sub");var e=[0,0,0,0];"ground2"===c.rgba?e=[1,0,0,0]:"ground3"===c.rgba?e=[0,1,0,0]:"ground4"===c.rgba?e=[0,0,1,0]:"ground5"===c.rgba&&(e=[0,0,0,1]),this.terrain.draw(c.mode,d,c.size,this.store.x,this.store.y,this.store.z,c.power*this.goo.world.tpf*60/100,c.brushTexture,e),this.terrain.updateTextures()}this.terrain.update(b)}this.vegetation&&this.vegetation.update(b.x,b.z),this.forrest&&this.forrest.update(b.x,b.z)},a.exports=d},505:function(a,b,c){function d(){this.calcVec=new h,this.initDone=!1}var e=c(216),f=c(30),g=c(9),h=c(8),i=c(41),j=c(14),k=c(31),l=c(112),m=c(28),n=c(48);d.prototype.init=function(a,b,c,d,g){this.world=a,this.terrainQuery=b,this.vegetationList={};for(var h in d){var i=d[h],j=this.createBase(i);this.vegetationList[h]=j}var k=new f(s,"vegetation");k.setTexture("DIFFUSE_MAP",c),k.cullState.enabled=!1,k.uniforms.discardThreshold=.2,k.blendState.blending="CustomBlending",k.uniforms.materialAmbient=[0,0,0,0],k.uniforms.materialDiffuse=[1,1,1,1],k.uniforms.materialSpecular=[0,0,0,0],k.renderQueue=3001,this.material=k,this.patchSize=15,this.patchDensity=19,this.gridSize=7,g&&(this.patchSize=g.patchSize||this.patchSize,this.patchDensity=g.patchDensity||this.patchDensity,this.gridSize=g.gridSize||this.gridSize),this.patchSpacing=this.patchSize/this.patchDensity,this.gridSizeHalf=Math.floor(.5*this.gridSize),this.grid=[];for(var l=this.createPatch(0,0),m=0;m<this.gridSize;m++){this.grid[m]=[];for(var n=0;n<this.gridSize;n++){var o=this.world.createEntity(this.material),p=new e(l);p.modelBound.xExtent=this.patchSize,p.modelBound.yExtent=500,p.modelBound.zExtent=this.patchSize,p.modelBoundDirty=!1,o.set(p),o.addToWorld(),this.grid[m][n]=o,o.meshRendererComponent.cullMode="Never",o.meshRendererComponent.hidden=!0}}k.uniforms.fadeDistMax=this.gridSizeHalf*this.patchSize,k.uniforms.fadeDistMin=.7*k.uniforms.fadeDistMax,this.currentX=-1e4,this.currentZ=-1e4,this.initDone=!0},d.prototype.rebuild=function(){this.currentX=-1e4,this.currentZ=-1e4};var o=!1;d.prototype.toggle=function(){o=!o;for(var a=0;a<this.gridSize;a++)for(var b=0;b<this.gridSize;b++){var c=this.grid[a][b];c.skip=o}o||this.rebuild()},d.prototype.update=function(a,b){if(this.initDone&&!o){var c=Math.floor(a/this.patchSize),d=Math.floor(b/this.patchSize);if(this.currentX!==c||this.currentZ!==d){for(var a=0;a<this.gridSize;a++)for(var b=0;b<this.gridSize;b++){var e=c+a,f=d+b,h=e-this.currentX,i=f-this.currentZ;if(!(h>=0&&h<this.gridSize&&i>=0&&i<this.gridSize)){e-=this.gridSizeHalf,f-=this.gridSizeHalf;var j=g.moduloPositive(e,this.gridSize),k=g.moduloPositive(f,this.gridSize);e*=this.patchSize,f*=this.patchSize;var l=this.grid[j][k],m=this.createPatch(e,f);m?(l.meshRendererComponent.hidden=!1,l.meshDataComponent.meshData=m,l.meshRendererComponent.worldBound.center.setDirect(e+.5*this.patchSize,0,f+.5*this.patchSize)):l.meshRendererComponent.hidden=!0}}this.currentX=c,this.currentZ=d}}},d.prototype.createPatch=function(a,b){for(var c=new l,d=new i,e=this.patchDensity,f=this.patchSpacing,g=[0,10,0],k=0;e>k;k++)for(var m=0;e>m;m++){var n=a+(k+.5*Math.random())*f,o=b+(m+.5*Math.random())*f;g[0]=n,g[2]=o+.5;var p=this.terrainQuery.getHeightAt(g),q=this.terrainQuery.getNormalAt(g);null===p&&(p=0),null===q&&(q=h.UNIT_Y);var r=q.dot(h.UNIT_Y),s=this.terrainQuery.getVegetationType(n,o,r);if(s){var t=.4*Math.random()+.8;d.scale.setDirect(t,t,t),d.translation.setDirect(0,0,0);var u=Math.random()*Math.PI*2,v=Math.sin(u),w=Math.cos(u);this.calcVec.setDirect(v,0,w),this.lookAt(d.rotation,this.calcVec,q),d.translation.setDirect(n,p,o),d.update();var x=this.vegetationList[s];c.addMeshData(x,d)}}for(var y=c.build(),z=0;z<y.length;z++)for(var x=y[z],A=x.getAttributeBuffer(j.POSITION),B=x.getAttributeBuffer(j.COLOR),z=0,C=0;z<A.length;z+=3,C+=4){var D=this.terrainQuery.getLightAt([A[z],A[z+1],A[z+2]]);B[C]=D,B[C+1]=D,B[C+2]=D,B[C+3]=1}return y[0]};var p=new h,q=new h,r=new h;d.prototype.lookAt=function(a,b,c){var d=p,e=q,f=r;e.set(c).normalize(),d.set(c).cross(b).normalize(),f.set(e).cross(d);var g=a.data;return g[0]=d.x,g[1]=d.y,g[2]=d.z,g[3]=e.x,g[4]=e.y,g[5]=e.z,g[6]=f.x,g[7]=f.y,g[8]=f.z,this},d.prototype.createBase=function(a){var b=new m(a.w,a.h,10,10);b.attributeMap.BASE=j.createAttribute(1,"Float"),b.attributeMap.COLOR=j.createAttribute(4,"Float"),b.rebuildData(b.vertexCount,b.indexCount,!0),b.getAttributeBuffer(j.NORMAL).set([0,1,0,0,1,0,0,1,0,0,1,0]),b.getAttributeBuffer(j.TEXCOORD0).set([a.tx,a.ty,a.tx,a.ty+a.th,a.tx+a.tw,a.ty+a.th,a.tx+a.tw,a.ty]),b.getAttributeBuffer("BASE").set([0,a.h,a.h,0]),b.getAttributeBuffer(j.COLOR).set([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);var c=new l,d=new i;d.translation.y=.5*a.h-.1*a.h,d.translation.z=.1*-a.w,d.update(),c.addMeshData(b,d),d.setRotationXYZ(0,.3*Math.PI,0),d.translation.x=.1*a.w,d.translation.z=.1*a.w,d.update(),c.addMeshData(b,d),d.setRotationXYZ(0,.3*-Math.PI,0),d.translation.x=.1*-a.w,d.translation.z=.1*a.w,d.update(),c.addMeshData(b,d);var e=c.build();return e[0]};var s={processors:[n.light.processor,function(a){n.USE_FOG?(a.setDefine("FOG",!0),a.uniforms.fogSettings=n.FOG_SETTINGS,a.uniforms.fogColor=n.FOG_COLOR):a.removeDefine("FOG")}],attributes:{vertexPosition:j.POSITION,vertexNormal:j.NORMAL,vertexUV0:j.TEXCOORD0,vertexColor:j.COLOR,base:"BASE"},uniforms:{viewProjectionMatrix:k.VIEW_PROJECTION_MATRIX,worldMatrix:k.WORLD_MATRIX,cameraPosition:k.CAMERA,diffuseMap:k.DIFFUSE_MAP,discardThreshold:-.01,fogSettings:function(){return n.FOG_SETTINGS},fogColor:function(){return n.FOG_COLOR},time:k.TIME,fadeDistMin:40,fadeDistMax:50},builder:function(a,b){n.light.builder(a,b)},vshader:function(){return["attribute vec3 vertexPosition;","attribute vec3 vertexNormal;","attribute vec2 vertexUV0;","attribute vec4 vertexColor;","attribute float base;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform vec3 cameraPosition;","uniform float time;","uniform float fadeDistMin;","uniform float fadeDistMax;",n.light.prevertex,"varying vec3 normal;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","varying vec4 color;","varying float dist;","void main(void) {","vec3 swayPos = vertexPosition;","swayPos.x += sin(time * 1.0 + swayPos.x * 0.5) * base * sin(time * 1.8 + swayPos.y * 0.6) * 0.1 + 0.08;","vec4 worldPos = worldMatrix * vec4(swayPos, 1.0);","vWorldPos = worldPos.xyz;","gl_Position = viewProjectionMatrix * worldPos;",n.light.vertex,"normal = (worldMatrix * vec4(vertexNormal, 0.0)).xyz;","texCoord0 = vertexUV0;","color = vertexColor;","viewPosition = cameraPosition - worldPos.xyz;","dist = 1.0 - smoothstep(fadeDistMin, fadeDistMax, length(viewPosition.xz));","}"].join("\n")},fshader:function(){return["uniform sampler2D diffuseMap;","uniform float discardThreshold;","uniform vec2 fogSettings;","uniform vec3 fogColor;",n.light.prefragment,"varying vec3 normal;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","varying float dist;","varying vec4 color;","void main(void)","{","vec4 final_color = texture2D(diffuseMap, texCoord0) * color;","if (final_color.a < discardThreshold) discard;","final_color.a = min(final_color.a, dist);","if (final_color.a <= 0.0) discard;","vec3 N = normalize(normal);",n.light.fragment,"final_color.a = pow(final_color.a, 0.5);","#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","gl_FragColor = final_color;","}"].join("\n")}};a.exports=d},506:function(a,b,c){function d(a,b,c,d){for(var f=[],g=0;g<a.length;g++)for(var h=0;h<a[g].length;h++)f.push(g*b/(a.length-1),a[g][h]*c,h*d/(a.length-1));this.verts=f,this.vertsPerLine=a[0].length;var i=e.defaultMap([e.POSITION,e.NORMAL,e.TEXCOORD0]),j=this.verts.length/3,k=j/this.vertsPerLine;e.call(this,i,j,(k-1)*(this.vertsPerLine-1)*6),this.rebuild()}var e=c(14),f=c(9);d.prototype=Object.create(e.prototype),d.prototype.rebuild=function(){this.getAttributeBuffer(e.POSITION).set(this.verts);for(var a=[],b=[],c=[],d=this.verts.length/3,g=d/this.vertsPerLine,h=0;g-1>h;h++){for(var i=0;i<this.vertsPerLine-1;i++){var j=(h+0)*this.vertsPerLine+(i+0),k=(h+1)*this.vertsPerLine+(i+0),l=(h+1)*this.vertsPerLine+(i+1),m=(h+0)*this.vertsPerLine+(i+1);a.push(k,j,m,k,m,l),c=f.getTriangleNormal(this.verts[3*j+0],this.verts[3*j+1],this.verts[3*j+2],this.verts[3*m+0],this.verts[3*m+1],this.verts[3*m+2],this.verts[3*k+0],this.verts[3*k+1],this.verts[3*k+2]),b.push(c[0],c[1],c[2])}b.push(c[0],c[1],c[2])}h--;for(var i=0;i<this.vertsPerLine-1;i++){var j=(h+0)*this.vertsPerLine+(i+0),k=(h+1)*this.vertsPerLine+(i+0),m=(h+0)*this.vertsPerLine+(i+1);c=f.getTriangleNormal(this.verts[3*j+0],this.verts[3*j+1],this.verts[3*j+2],this.verts[3*m+0],this.verts[3*m+1],this.verts[3*m+2],this.verts[3*k+0],this.verts[3*k+1],this.verts[3*k+2]),b.push(c[0],c[1],c[2])}b.push(c[0],c[1],c[2]),this.getAttributeBuffer(e.NORMAL).set(b),this.getIndexBuffer().set(a);for(var n=[],o=this.verts[this.verts.length-3],p=this.verts[this.verts.length-1],h=0;h<this.verts.length;h+=3){var q=this.verts[h+0]/o,r=this.verts[h+2]/p;n.push(q,r)}return this.getAttributeBuffer(e.TEXCOORD0).set(n),this},a.exports=d}});