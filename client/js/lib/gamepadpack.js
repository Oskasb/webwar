webpackJsonp([6],{0:function(a,b,c){a.exports=c(277)},277:function(a,b,c){if(a.exports={GamepadComponent:c(278),GamepadData:c(279),GamepadSystem:c(280)},"undefined"!=typeof window)for(var d in a.exports)window.goo[d]=a.exports[d]},278:function(a,b,c){function d(a){e.apply(this,arguments),this.type="GamepadComponent",this.buttonDownFunctions={},this.buttonUpFunctions={},this.buttonPressedFunctions={},this.leftStickFunction=null,this.rightStickFunction=null,this.gamepadIndex=a||0}var e=c(20);d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.setButtonDownFunction=function(a,b){this.buttonDownFunctions[a]=b},d.prototype.setButtonUpFunction=function(a,b){this.buttonUpFunctions[a]=b},d.prototype.setButtonPressedFunction=function(a,b){this.buttonPressedFunctions[a]=b},d.prototype.setLeftStickFunction=function(a){this.leftStickFunction=a},d.prototype.setRightStickFunction=function(a){this.rightStickFunction=a},a.exports=d},279:function(a,b,c){function d(){this.leftStickDirection=new e,this.rightStickDirection=new e,this.buttonData={};for(var a=20,b=0;a>b;b++)this.buttonData[b]={pressed:!1,down:!1,value:0};this.leftAmount=0,this.rightAmount=0}var e=c(19),f=c(9);d.prototype.recalculateData=function(a){this.recalculateSticks(a),this.recalculateButtons(a)},d.prototype.resetData=function(a){for(var b=a.buttons.length,c=0;b>c;c++)this.buttonData[c].pressed=!1},d.prototype.recalculateButtons=function(a){for(var b=a.buttons,c=b.length,d=0;c>d;d++){var e=b[d];1===e?this.buttonData[d].down=!0:(this.buttonData[d].down===!0&&(this.buttonData[d].pressed=!0),this.buttonData[d].down=!1),this.buttonData[d].value=e}},d.prototype.recalculateSticks=function(a){var b=a.axes,c=b[0],d=b[1];this.calculateStickDirection(this.leftStickDirection,c,d),this.leftAmount=this.calculateStickAmount(c,d);var e=b[2],f=b[3];this.calculateStickDirection(this.rightStickDirection,e,f),this.rightAmount=this.calculateStickAmount(e,f)},d.prototype.calculateStickDirection=function(a,b,c){a.setDirect(b,c);var d=a.length();d>f.EPSILON&&a.scale(1/d)},d.prototype.calculateStickAmount=function(a,b){return Math.max(Math.abs(a),Math.abs(b))},a.exports=d},280:function(a,b,c){function d(){e.call(this,"GamepadSystem",["GamepadComponent"]),this.gamepads=[],this.gamepadData=[];for(var a=4,b=0;a>b;b++)this.gamepadData[b]=new f;navigator.webkitGetGamepads?this.updateGamepads=this.chromeGamepadUpdate:(this.updateGamepads=function(){},window.addEventListener("gamepadconnected",function(a){this.mozGamepadHandler(a,!0)}.bind(this),!1),window.addEventListener("gamepaddisconnected",function(a){this.mozGamepadHandler(a,!1)}.bind(this),!1))}var e=c(42),f=c(279);d.prototype.checkGamepadMapping=function(a){a.mapping?"standard"!==a.mapping&&console.warn("Non-standard mapping set on gamepad #"+a.index):console.warn("No mapping set on gamepad #"+a.index)},d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.mozGamepadHandler=function(a,b){var c=a.gamepad;b?(this.gamepads[c.index]=c,this.checkGamepadMapping(c)):delete this.gamepads[c.index]},d.prototype.chromeGamepadUpdate=function(){for(var a=navigator.webkitGetGamepads(),b=a.length,c=0;b>c;c++){var d=a[c];d&&(this.gamepads[d.index]=d)}},d.prototype.updateGamepadData=function(){this.updateGamepads();for(var a=this.gamepads.length,b=0;a>b;b++){var c=this.gamepads[b];c&&this.gamepadData[c.index].recalculateData(c)}},d.prototype.resetGamepadData=function(){for(var a=this.gamepads.length,b=0;a>b;b++){var c=this.gamepads[b];c&&this.gamepadData[c.index].resetData(c)}},d.prototype._processEntity=function(a){var b=a.gamepadComponent,c=b.gamepadIndex,d=this.gamepadData[c],e=this.gamepads[c];if(e){var f,g,h;b.leftStickFunction&&(f=e.axes[0],g=e.axes[1],h=[f,g],b.leftStickFunction(a,d.leftStickDirection,d.leftAmount,h)),b.rightStickFunction&&(f=e.axes[2],g=e.axes[3],h=[f,g],b.rightStickFunction(a,d.rightStickDirection,d.rightAmount,h));var i,j;for(i in b.buttonDownFunctions)j=d.buttonData[i],j.down===!0&&b.buttonDownFunctions[i](a,j.value);for(i in b.buttonUpFunctions)j=d.buttonData[i],j.down===!1&&b.buttonUpFunctions[i](a,j.value);for(i in b.buttonPressedFunctions)j=d.buttonData[i],j.pressed===!0&&b.buttonPressedFunctions[i](a,j.value)}},d.prototype.process=function(a){this.updateGamepadData();for(var b=a.length,c=0;b>c;c++)this._processEntity(a[c]);this.resetGamepadData()},a.exports=d}});